#!/usr/bin/env python

__doc__ = "a script to flattens the distribution of weights within a mixture-model process. This is done by re-assigning weights after they've been flattend by raising them by an inverse temperature."
__author__ = "reed.essick@ligo.org"

#-------------------------------------------------

import h5py

from argparse import ArgumentParser

### non-standard imports
from universality import gaussianprocess as gp
from universality import hyperparams as hp

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

### verbosity arguments
parser.add_argument('-v', '--verbose', default=False, action='store_true')

### required arguments
parser.add_argument('inpath', type=str,
    help='the path for the input process')
parser.add_argument('outpath', type=str,
    help='the path for the resulting summed process')

parser.add_argument('-T', '--temperature', default=hp.DEFAULT_TEMPERATURE, type=float,
    help='DEFAULT=%f'%hp.DEFAULT_TEMPERATURE)

args = parser.parse_args()

beta = 1./args.temperature

#-------------------------------------------------

if args.verbose:
    print('reading process from: '+args.inpath)
    print('writing flattened (T=%.3f) process to: %s'%(args.temperature, args.outpath))
i = 0
with h5py.File(args.outpath, 'w') as out_obj:
    for process in gp.hdf5load(inpath):
        gp.create_process_group(
            out_obj.create_group(str(i)),
            process['hyperparams']['poly_degree'],
            process['hyperparams']['sigma'],
            process['hyperparams']['length_scale'],
            process['hyperparams']['sigma_obs'],
            process['x'],
            process['f'],
            process['cov'],
            xlabel=process['labels']['xlabel'],
            flabel=process['labels']['flabel'],
            weight=process['weight']**beta, ### modify the weight appropriately
            model_multiplier=process['hyperparams']['model_multiplier'],
        )
        i += 1
