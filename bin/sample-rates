#!/usr/bin/env python

__doc__ = """a simple script to sample the rate parameters given a set of observations and exposure
"""
__author__ = "reed.essick@ligo.org"

#-------------------------------------------------

import numpy as np

import emcee

from argparse import ArgumentParser

### non-standard libraries
from universality import rates
from universality import utils

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

parser.add_argument('-s', '--samples', default=[], nargs=2, type=str, action='append',
    help='eg, "--samples label samples.csv'; can be repeated)

parser.add_argument('-e', '--exposure', type=str,
    help='eg, "--exposure exposure.hdf5')

parser.add_arugment('--hyperparam-range', default=[], nargs=3, type=str, action='append',
    help='eg, "--hyperparam-range param min max"; can be repeated')

parser.add_argument('--hyperparam-initial-value', default=[], nargs=2, type=str, action='append',
    help='eg, "--hyperparam-initial-value param val"; can be repeated')

parser.add_argument('population_type', type=str)
parser.add_argument('num_samples', type=int)
parser.add_argument('num_walkders', type=int)
parser.add_argument('--num-proc', type=int, default=utils.DEFAULT_NUM_PROC)

parser.add_argument('outpath', default=None, type=str)

args = parser.parse_args()

args.hyperparam_range = dict((p, (float(m), float(M))) for p, m, M in args.hyperparam_range)
args.hyperparam_initial_value = dict((p, float(v)) for p, v in args.hyperparam_initial_value)

#-------------------------------------------------

raise NotImplementedError
