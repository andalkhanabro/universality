#!/usr/bin/env python

"""a script that normalized the weights in a mixture model so they sum to 1.
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

import h5py
import numpy as np

from argparse import ArgumentParser

### non-standard imports
from universality.gaussianprocess import gaussianprocess as gp

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

### verbosity arguments
parser.add_argument('-v', '--verbose', default=False, action='store_true')

### required arguments
parser.add_argument('inpath', type=str,
    help='the path for input mixture model')
parser.add_argument('--outpath', type=str, default=None,
    help='the path for the resulting summed process. If not supplied, we overwrite the input path.')

args = parser.parse_args()

assert len(args.inpath)>1, 'please supply at least 2 --inpath arguments'
if args.outpath is None:
    args.outpath = args.inpath

#-------------------------------------------------

if args.verbose:
    print('reading process from: '+args.inpath)
models = gp.hdf5load(args.inpath)

if args.verbose:
    print('normalizing mixture model')
norm = np.sum([_['weight'] for _ in models])

if args.verbose:
    print('writing normalized process to: '+args.outpath)
with h5py.File(args.outpath, 'w') as out_obj:
    for i, process in enumerate(models):
        gp.create_process_group(
            out_obj.create_group(str(i)),
            process['hyperparams']['poly_degree'],
            process['hyperparams']['sigma'],
            process['hyperparams']['length_scale'],
            process['hyperparams']['sigma_obs'],
            process['x'],
            process['f'],
            process['cov'],
            xlabel=process['labels']['xlabel'],
            flabel=process['labels']['flabel'],
            weight=process['weight']/norm, ### modify the weight appropriately
            model_multiplier=process['hyperparams']['model_multiplier'],
        )
